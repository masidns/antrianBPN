@attribute [Authorize(Roles = "Admin")]
@layout AdminLayout
@page "/admin/add-loket/{id:int}"
@*@using System.Text.RegularExpressions
@using Microsoft.EntityFrameworkCore*@

@inject ApplicationDbContext dbcontext
@inject NavigationManager nav
@inject AuthenticationStateProvider authStateProvider

<PageTitle>Tambah Loket</PageTitle>

@if (model == null)
{
    <p><em>Loading...</em></p>
}
else{
    <div class="container-fluid">
        <div class="row">
            <div class="col">
                <RadzenTemplateForm Data="@model" Submit="@(async (Layanan args) => {await Submit(args); })">
                    <RadzenFieldset Text="Tambah Data Loket">
                        <RadzenCard>
                            <div class="row">
                                <div class="col-md-4 align-items-center d-flex">
                                    <RadzenLabel Text="Nama Loket / Pelayanan" />
                                </div>
                                <div class="col-md-8">
                                    @if (errorMessage != null)
                                        {
                                        <RadzenToast Icon="error" ShowDuration="3000" Title="Error" Text="@errorMessage" />
                                        }
                                    <RadzenTextBox @bind-Value="model.Nama" style="width: 100%;" Name="Nama" />
                                    <RadzenRequiredValidator Component="Nama" Text="Loket atau Pelayanan tidak boleh kosong !" Popup=true Style="position:relative"/>
                                </div>
                            </div>
                            <div class="row justify-content-center">
                                <div class="col-md-12 d-flex align-items-end justify-content-center" style="margin-top: 16px;">
                                    <RadzenButton ButtonType="ButtonType.Submit" Icon="save" Text="Save" />
                                    <RadzenButton ButtonStyle="ButtonStyle.Light" Icon="cancel" style="display: inline-block; margin-left: 10px;" Text="Cancel" Click="@Cancel" />
                                </div>
                            </div>
                        </RadzenCard>
                    </RadzenFieldset>
                </RadzenTemplateForm>
            </div>
        </div>
    </div>
}






@code {
    [Parameter]
    public int Id { get; set; }

    Layanan model;
    string errorMessage;

    protected override Task OnInitializedAsync()
    {

        if (Id <= 0)
        {
            model = new Layanan();
        }
        else
        {
            model = dbcontext.Layanans.SingleOrDefault(x => x.Id == Id);
        }
        return base.OnInitializedAsync();
    }

    async Task Submit(Layanan model)
    {
        if (dbcontext.Layanans.Any(x => x.Nama.ToLower() == model.Nama.ToLower()))
        {
            errorMessage = "Layanan sudah ada dalam database. Silakan masukkan nama layanan yang lain.";
            return;
        }else
        {
            var trans = await dbcontext.Database.BeginTransactionAsync();
            if (model.Id <= 0)
            {
                dbcontext.Layanans.Add(model);
                await dbcontext.SaveChangesAsync();
                await trans.CommitAsync();
            }
            else
            {
                dbcontext.SaveChanges();
                await trans.CommitAsync();
            }
            nav.NavigateTo("/admin/loket");
        }
        
    }

    void Cancel()
    {
        nav.NavigateTo("/admin/loket");
    }
}
