@page "/admin/loket"
@using System.Linq.Dynamic.Core
@inject ApplicationDbContext dbcontext
@inject NavigationManager nav

<PageTitle>Loket</PageTitle>


<div class="container-fluid">
    <RadzenFieldset Text="Data Loket">
    <RadzenCard>
        <div class="row">
            <div class="col">
                <RadzenButton Click="@(()=> nav.NavigateTo($"/admin/add-loket/0"))" Icon="add" />
            </div>
        </div>
        <div class="row mt-3">
            <div class="col">
                    <RadzenDataGrid @ref="grid" Data="@data" TItem="Layanan"
                                    AllowFiltering="true" FilterMode="FilterMode.SimpleWithMenu" AllowPaging="true" AllowSorting="true">
                        <Columns>
                            @*<RadzenDataGridColumn TItem="Layanan" Title="ID" Property="Id" />*@
                            <RadzenDataGridColumn TItem="Layanan" Title="Nama" Property="Nama" />
                            <RadzenDataGridColumn TItem="Layanan" Title="Action">
                                <Template Context="item">
                                    @*<RadzenButton Click="@(()=> nav.NavigateTo($"/admin/adddosen/{item.Id}"))" ButtonStyle="ButtonStyle.Warning" Icon="edit" Size="ButtonSize.Small"></RadzenButton>
                                    <RadzenButton Click="@(()=>Delete(item))" ButtonStyle="ButtonStyle.Danger" Icon="delete" Size="ButtonSize.Small"></RadzenButton>*@
                                    <RadzenButton Click="@(()=> nav.NavigateTo($"admin/add-loket/{item.Id}"))" ButtonStyle="ButtonStyle.Warning" Icon="edit" Size="ButtonSize.Small" />
                                    <RadzenButton Click="@(()=>delete(item))" ButtonStyle="ButtonStyle.Danger" Icon="delete" Size="ButtonSize.Small"/>
                                </Template>
                            </RadzenDataGridColumn>
                        </Columns>
                    </RadzenDataGrid>
            </div>
        </div>
    </RadzenCard>
    </RadzenFieldset>
</div>

@code {
    public ICollection<Layanan> data { get; set; }
    public ICollection<Layanan> datasource { get; set; }
    RadzenDataGrid<Layanan> grid;

    protected override async Task OnInitializedAsync()
    {
        datasource = dbcontext.Layanans.ToList();
        data = datasource;
        await base.OnInitializedAsync();
    }

    async Task delete(Layanan model)
    {
        dbcontext.Layanans.Remove(model);
        data.Remove(model);
        await dbcontext.SaveChangesAsync();
        await grid.Reload();
    }


}
