@attribute [Authorize(Roles = "Admin")]
@layout AdminLayout
@page "/admin/petugas"
@inject ApplicationDbContext dbcontext
@inject NavigationManager nav

<PageTitle>Petugas</PageTitle>

@*<h3>PagePetugas</h3>*@

<div class="container-fluid">
    <RadzenFieldset Text="Data Petugas">
        <RadzenCard>
            <div class="row">
                <div class="col">
                    <RadzenButton Icon="add" Click="@(()=>nav.NavigateTo($"admin/add-petugas/0"))"></RadzenButton>
                </div>
            </div>
            <div class="row mt-3">
                <div class="col">
                    <RadzenDataGrid @ref="grid" Data="@data" TItem="Petugas" AllowFiltering="true" FilterMode="FilterMode.SimpleWithMenu" AllowPaging="true" AllowSorting="true">
                        <Columns>
                            <RadzenDataGridColumn TItem="Petugas" Title="Nama Petugas" Property="Nama" />
                            <RadzenDataGridColumn TItem="Petugas" Title="NIP" Property="Nik" />
                            <RadzenDataGridColumn TItem="Petugas" Title="Alamat" Property="Alamat" />
                            <RadzenDataGridColumn TItem="Petugas" Title="Telepon" Property="Telepon" />
                            <RadzenDataGridColumn TItem="Petugas" Title="Jenis Kelamin" Property="JenisKelamin" />
                            <RadzenDataGridColumn TItem="Petugas" Title="Email" Property="Email" />
                            <RadzenDataGridColumn TItem="Petugas" Title="Action">
                                <Template Context="item">
                                    <RadzenButton Click="@(()=> nav.NavigateTo($"admin/add-petugas/{item.Id}"))" ButtonStyle="ButtonStyle.Warning" Icon="edit" Size="ButtonSize.Small" />
                                    <RadzenButton Click="@(()=>Delete(item))" ButtonStyle="ButtonStyle.Danger" Icon="delete" Size="ButtonSize.Small"/>
                                </Template>
                             </RadzenDataGridColumn>
                        </Columns>
                    </RadzenDataGrid>
                </div>
            </div>
        </RadzenCard>
    </RadzenFieldset>
</div>


@code {
    public ICollection<Petugas> data { get; set; }
    public ICollection<Petugas> datasource { get; set; }
    RadzenDataGrid<Petugas> grid;

    protected override async Task OnInitializedAsync()
    {
        datasource = dbcontext.Petugas
        .OrderByDescending(x=>x.Id)
        .ToList();
        data = datasource;
        await base.OnInitializedAsync();
    }

    async Task Delete(Petugas model)
    {
        var trans = dbcontext.Database.BeginTransaction();
        try
        {
            dbcontext.Petugas.Remove(model);

            var user = dbcontext.Users.SingleOrDefault(x => x.Id == model.UserId);
            if(user != null)
            {
                dbcontext.Users.Remove(user);
            }

            data.Remove(model);
            await dbcontext.SaveChangesAsync();
            await trans.CommitAsync();
            await grid.Reload();
        }
        catch(Exception ex)
        {

        }
    }

}
